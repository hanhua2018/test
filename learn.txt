vim/git 命令

教程：https://blog.csdn.net/wangrenbao123/article/details/55511461

cd
cd d: 进入D盘
cd XXX 进入XXX文件夹

mkdir
mkdir XXX 新建一个名为XXX的文件夹

pwd
pwd用于显示当前的目录

git init 把当前目录变成git可管理的仓库（会自动创建一个.git的目录）

vim
vim XXX 创建一个名为XXX的文件。

rm XXX 删除文件XXX

git add XXX （把文件添加到暂存区）
git commit -m 'abc'（把暂存区文件提交到当前分支）
向git提交了文件XXX，注释为abc 

/**问题：添加文件时出现如下提示。
$ git add readme.txt
warning: LF will be replaced by CRLF in readme.txt.
The file will have its original line endings in your working directory.


问题出在不同操作系统所使用的换行符是不一样的
Uinx/Linux采用换行符LF表示下一行（LF：LineFeed，中文意思是换行）
Dos和Windows采用回车+换行CRLF表示下一行（CRLF：CarriageReturn LineFeed，中文意思是回车换行）
Mac OS采用回车CR表示下一行（CR：CarriageReturn，中文意思是回车）。
在Git中，可以通过以下命令来显示当前你的Git中采取哪种对待换行符的方式
$ git config core.autocrlf  
此命令会有三个输出，“true”，“false”或者“input”
为true时，Git会将你add的所有文件视为文本问价你，将结尾的CRLF转换为LF，而checkout时会再将文件的LF格式转为CRLF格式。
为false时，line endings不做任何改变，文本文件保持其原来的样子。
为input时，add时Git会把CRLF转换为LF，而check时仍旧为LF，所以Windows操作系统不建议设置此值。

$ git config --global core.autocrlf params 修改core.autocrlf，params取值为true/false/input

**/

git status 查看提交状态
git log 查看提交日志
git log --pretty=oneline 简要显示日志
git reflog 查看日志

git reset 回退版本
git reset --hard HEAD^ 回退到上一个版本
git reset --hard HEAD^^ 回退到上两个版本
git reset --hard HEAD~n 回退到上n个版本
git reset --hard 版本号 根据版本号回退。

ssh-keygen -t rsa 生成秘钥

git remote add origin https://github.com/XXX/XX.git
关联远程仓库。
git push origin master 把本地仓库分支master内容推送到远程仓库中。



查看分支：git branch
创建分支：git branch name
切换分支：git checkout name
创建+切换分支：git checkout –b name
合并某分支到当前分支：git merge name
删除分支：git branch –d name

Git基本常用命令如下：

　　mkdir：         XX (创建一个空目录 XX指目录名)

　　pwd：          显示当前目录的路径。

　　git init          把当前的目录变成可以管理的git仓库，生成隐藏.git文件。

　　git add XX       把xx文件添加到暂存区去。

　　git commit –m “XX”  提交文件 –m 后面的是注释。

　　git status        查看仓库状态

　　git diff  XX      查看XX文件修改了那些内容

　　git log          查看历史记录

　　git reset  --hard HEAD^ 或者 git reset  --hard HEAD~ 回退到上一个版本

　　(如果想回退到100个版本，使用git reset –hard HEAD~100 )

　　cat XX         查看XX文件内容

　　git reflog       查看历史记录的版本号id

　　git checkout -- XX  把XX文件在工作区的修改全部撤销。

　　git rm XX          删除XX文件

　　git remote add origin https://github.com/tugenhua0707/testgit 关联一个远程库

　　git push –u(第一次要用-u 以后不需要) origin master 把当前master分支推送到远程库

　　git clone https://github.com/tugenhua0707/testgit  从远程库中克隆

　　git checkout –b dev  创建dev分支 并切换到dev分支上

　　git branch  查看当前所有的分支

　　git checkout master 切换回master分支

　　git merge dev    在当前的分支上合并dev分支

　　git branch –d dev 删除dev分支

　　git branch name  创建分支

　　git stash 把当前的工作隐藏起来 等以后恢复现场后继续工作

　　git stash list 查看所有被隐藏的文件列表

　　git stash apply 恢复被隐藏的文件，但是内容不删除

　　git stash drop 删除文件

　　git stash pop 恢复文件的同时 也删除文件

　　git remote 查看远程库的信息

　　git remote –v 查看远程库的详细信息

　　git push origin master  Git会把master分支推送到远程库对应的远程分支上

